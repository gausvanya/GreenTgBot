from aiogram.types import Message
from aiogram import Router, F

from ..utils import get_user_mention, get_admin_name_from_rang, get_emoji_rang_admin
from ..DataBase.Models import Agents, Statistic, Admins
from ..Filters import GetUserInfo, Command #, IsAdminFilter
from ..lib.UserBot import get_user_status

from datetime import datetime, timedelta

rt = Router()


@rt.message(Command(
    commands=['–ø—Ä–æ—Ñ–∏–ª—å', '–º–æ–π –ø—Ä–æ—Ñ–∏–ª—å', '–∫—Ç–æ —è', '–∫—Ç–æ —Ç—ã'],
    html_parse_mode=True),
    F.chat.type != 'private'
)
async def profile_user(message: Message, args=None) -> None | Message:
    #check_admin = IsAdminFilter(args[1])
    #if not await check_admin(message):
    #    return

    split = args[0].split('\n', 1)[0].lower()
    user = None

    if split in ['–º–æ–π –ø—Ä–æ—Ñ–∏–ª—å', '–∫—Ç–æ —è'] or split == '–ø—Ä–æ—Ñ–∏–ª—å' and len(split.split()) == 1:
        user = message.from_user
        user_id, user_username, user_full_name = user.id, user.username, user.full_name
        profile_photo = await message.from_user.get_profile_photos(limit=1)
        is_bot = message.from_user.is_bot
    else:
        if split.startswith('–∫—Ç–æ —Ç—ã') and len(split.split()) > 2:
            user = GetUserInfo(split.split(maxsplit=2)[2].rstrip())

        elif split.startswith('–ø—Ä–æ—Ñ–∏–ª—å') and len(split.split()) > 1:
            user = GetUserInfo(args[0].split('\n', 1)[0].split(maxsplit=1)[1].rstrip())

        elif message.reply_to_message:
            reply_user = message.reply_to_message.from_user
            user_id, user_username, user_full_name = reply_user.id, reply_user.username, reply_user.full_name
            profile_photo = await reply_user.get_profile_photos(limit=1)
            is_bot = reply_user.is_bot
        else:
            return

        if user:
            user = await user(message)
            if not user:
                return

            user_id, user_username, user_full_name = user
            profile_photo = await message.bot.get_user_profile_photos(limit=1, user_id=user_id)
            is_bot = (await message.bot.get_chat_member(message.chat.id, user_id)).user.is_bot

    user_mention = get_user_mention(user_id, user_username, user_full_name)
    chat_member = await message.bot.get_chat_member(message.chat.id, user_id)
    agent = await Agents.get_or_none(user_id=user_id)

    get_status = await get_user_status(user_username if user_username else user_id, return_date_str=True)

    if agent:
        user_status = '–∞–≥–µ–Ω—Ç –±–æ—Ç–∞'
    elif chat_member.status == 'creator':
        user_status = '—Å–æ–∑–¥–∞—Ç–µ–ª—å —á–∞—Ç–∞'
    elif chat_member.status == 'administrator':
        user_status = '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
    elif chat_member.status == 'member':
        user_status = '—É—á–∞—Å—Ç–Ω–∏–∫'
    elif chat_member.status in ['left', 'kicked']:
        user_status = '–±—ã–≤—à–∏–π —É—á–∞—Å—Ç–Ω–∏–∫'
    else:
        user_status = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'

    type_user = '–±–æ—Ç' if is_bot else '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'

    statistic = await Statistic.filter(
        chat_id=message.chat.id,
        user_id=user_id,
    ).all()

    if statistic:
        day_stat = 0
        for stat in statistic:
            if stat.date == datetime.now().strftime('%d.%m.%Y'):
                day_stat = stat.count

        week_stat = sum(stat.count for stat in statistic if
                        datetime.strptime(str(stat.date), '%d.%m.%Y') >= datetime.now() - timedelta(days=7))
        month_stat = sum(stat.count for stat in statistic if
                         datetime.strptime(stat.date, '%d.%m.%Y') >= datetime.now() - timedelta(days=30))
        total_stat = sum(stat.count for stat in statistic)

        first_appearance = await Statistic.filter(
            chat_id=message.chat.id,
            user_id=user_id
        ).order_by('date').values('date')
    else:
        return await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω—å—à–µ –Ω–µ –∑–∞—Ö–æ–¥–∏–ª –≤ —á–∞—Ç')

    result = await Admins.filter(
        chat_id=message.chat.id,
        user_id=user_id
    ).first()

    rang = result.rang if result else 0
    admin_rang_name = get_admin_name_from_rang(rang)
    emoji_rang = get_emoji_rang_admin(rang)

    text = (
        f'üë§ –≠—Ç–æ {type_user} {user_mention}, {user_status}\n\n'
        f'{emoji_rang} —Ä–∞–Ω–≥: {admin_rang_name}\n'
        f'‚ñ∂Ô∏è –¢–≥-—Å—Ç–∞—Ç—É—Å: {get_status}\n'
        f'üï∞ –ü–µ—Ä–≤–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ: {first_appearance[0]["date"]}\n'
        f'‚ö°Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞(–¥–Ω | –Ω–µ–¥ | –º–µ—Å | –≤—Å–µ–≥–æ): {day_stat} | {week_stat} | {month_stat} | {total_stat}'
    )

    if profile_photo.photos:
        photo = profile_photo.photos[0][-1].file_id
        await message.answer_photo(
            photo=photo,
            caption=text
        )
    else:
        await message.answer(text)
